name: Deploy Server

on:

  pull_request:
    # types:
    #   - closed
    branches:
      - main

jobs:
  build:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0'

    - name: Build and Publish API
      run: |
          cd server
          dotnet publish -c Release -o Release

    - name: Update Dockerfile with env.properties
      run: |
          cd server
          echo "DB_HOST_DEV=${{secrets.DB_HOST_DEV}}" >> env.properties
          echo "DB_USER=${{secrets.DB_DEV_USERNAME}}" >> env.properties
          echo "DB_PASS=${{secrets.DB_DEV_PASSWORD }}" >> env.properties
          echo "DB_NAME=release_monkey_db" >> env.properties
          echo "DB_TRUST_CERT=true" >> env.properties
          echo "GITHUB_APP_CLIENT_ID=${{secrets.HUB_APP_CLIENT_ID }}" >> env.properties
          echo "GITHUB_APP_CLIENT_SECRET=${{secrets.HUB_APP_CLIENT_SECRET }}" >> env.properties
          echo "SMTP_USERNAME=${{secrets.SMTP_USERNAME }}" >> env.properties
          echo "SMTP_PASSWORD=${{secrets.SMTP_PASSWORD }}" >> env.properties
          sed -i 's|EXPOSE 8080|COPY env.properties env.properties \nEXPOSE 8080|' Dockerfile

    - name: Login to docker hub
      run: |
          cd server
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

    - name: Build docker image
      run: |
          cd server
          docker build -t ${{ secrets.DOCKER_USERNAME }}/release-monkey .

    - name: Publish image to Docker-hub
      run: |
          cd server
          docker push ${{ secrets.DOCKER_USERNAME }}/release-monkey:latest

  deploy:
    needs: build
    # if: github.event.pull_request.merged == true
    runs-on: [release-monkey-dev]
    steps:
      - name: Pull Image from docker hub
        run: sudo docker pull ${{ secrets.DOCKER_USERNAME }}/release-monkey:latest
      - name: Delete old container
        run: sudo docker rm -f release-monkey-container
      - name: Run docker container
        run: sudo docker run -d -p 8080:8080 --name release-monkey-container ${{ secrets.DOCKER_USERNAME }}/release-monkey
